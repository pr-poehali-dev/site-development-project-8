import { useState, useRef, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Badge } from "@/components/ui/badge";
import Icon from "@/components/ui/icon";

interface Message {
  id: string;
  text: string;
  sender: "user" | "ai";
  timestamp: Date;
}

export const FullscreenDemo = () => {
  const [activeTab, setActiveTab] = useState<"site" | "structure">("site");
  const [messages, setMessages] = useState<Message[]>([
    {
      id: "1",
      text: "–î–æ–±–∞–≤—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏",
      sender: "user",
      timestamp: new Date(Date.now() - 120000),
    },
    {
      id: "2", 
      text: "–î–æ–±–∞–≤–ª—é –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç —Å –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º –∏ –¥–µ–º–æ-—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã!\n\n–ì–æ—Ç–æ–≤–æ! –î–æ–±–∞–≤–∏–ª –≤—Å–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É üéØ\n\n–ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n- –ß–∞—Ç —Å –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º ‚Äî –ø–ª–∞–≤–∞—é—â–∞—è –∫–Ω–æ–ø–∫–∞ —Å–ø—Ä–∞–≤–∞ –≤–Ω–∏–∑—É –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –ò–ò\n- –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –¥–µ–º–æ ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –ø—Ä–µ–≤—å—é –∏ –∫–æ–¥–æ–º, –∫–Ω–æ–ø–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏\n- –ñ–∏–≤–æ–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–¥–∞ ‚Äî –ø–∏—à–∏ –æ–ø–∏—Å–∞–Ω–∏–µ ‚Üí –ò–ò –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–¥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n- –ë—ã—Å—Ç—Ä—ã–µ –ø—Ä–æ–º–ø—Ç—ã ‚Äî –≥–æ—Ç–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ‚Äî –≤—Ä–µ–º—è, —Å—Ç—Ä–æ–∫–∏ –∫–æ–¥–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–∫–æ–≤\n\n–•–æ—á–µ—à—å, —è –¥–æ–±–∞–≤–ª—é —Å–µ–∫—Ü–∏—é —Å –æ—Ç–∑—ã–≤–∞–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –∫–µ–π—Å–∞–º–∏ —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤?",
      sender: "ai",
      timestamp: new Date(Date.now() - 60000),
    },
    {
      id: "3",
      text: "—Å–∞–π—Ç –¥–æ–ª–∂–µ–Ω –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–æ–¥ –≥–µ–Ω–µ—Ä–∏—Ç—å, –∞ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã.",
      sender: "user",
      timestamp: new Date(Date.now() - 30000),
    },
    {
      id: "4",
      text: "–ü–æ–Ω—è–ª! –ü–µ—Ä–µ—Å—Ç—Ä–∞–∏–≤–∞—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã—Ö —Å–∞–π—Ç–æ–≤, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–æ–¥–∞ üöÄ\n\n–ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å–æ–∑–¥–∞—ë—Ç –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–µ —Å–∞–π—Ç—ã üåê\n\n–ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª:\n- Hero: \"–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–∞–π—Ç—ã –∑–∞ 30 —Å–µ–∫—É–Ω–¥\" –≤–º–µ—Å—Ç–æ \"—Å–∏–ª–æ–π –º—ã—Å–ª–∏\"\n- –û–ø–∏—Å–∞–Ω–∏–µ: –ò–ò —Å–æ–∑–¥–∞—ë—Ç –ø–æ–ª–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã ‚Äî –ª–µ–Ω–¥–∏–Ω–≥–∏, –º–∞–≥–∞–∑–∏–Ω—ã, –±–ª–æ–≥–∏\n- –î–µ–º–æ: –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–æ—Ç–æ–≤—ã–π —Å–∞–π—Ç –∫–æ—Ñ–µ–π–Ω–∏ —Å –º–µ–Ω—é –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π\n- –ñ–∏–≤–æ–π —Ä–µ–¥–∞–∫—Ç–æ—Ä: –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–µ–≤—å—é —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–∞–π—Ç–æ–≤\n- –ß–∞—Ç: –ò–ò –≥–æ–≤–æ—Ä–∏—Ç –ø—Ä–æ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–∞–π—Ç–æ–≤, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–æ–¥–∞\n- –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: —É–ø–æ—Ä –Ω–∞ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏\n\n–•–æ—á–µ—à—å, —è –¥–æ–±–∞–≤–ª—é —Ä–∞–∑–¥–µ–ª —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –≥–æ—Ç–æ–≤—ã—Ö —Å–∞–π—Ç–æ–≤ (–≥–∞–ª–µ—Ä–µ—é —à–∞–±–ª–æ–Ω–æ–≤)?",
      sender: "ai",
      timestamp: new Date(),
    },
  ]);
  const [inputValue, setInputValue] = useState("");
  const [isTyping, setIsTyping] = useState(false);
  const scrollRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    if (scrollRef.current) {
      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;
    }
  }, [messages]);

  const handleSend = () => {
    if (!inputValue.trim()) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      text: inputValue,
      sender: "user",
      timestamp: new Date(),
    };

    setMessages((prev) => [...prev, userMessage]);
    setInputValue("");
    setIsTyping(true);

    setTimeout(() => {
      const aiResponses = [
        "–û—Ç–ª–∏—á–Ω–æ! –°–æ–∑–¥–∞—é –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –ª–µ–Ω–¥–∏–Ω–≥ —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π, –º–µ–Ω—é –∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏...",
        "–ì–æ—Ç–æ–≤–æ! –°–∞–π—Ç —Å 5 —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ —Å–æ–∑–¥–∞–Ω. –î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ä–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏?",
        "–ù–∞—Å—Ç—Ä–æ–∏–ª –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –±—ç–∫–µ–Ω–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤.",
      ];
      const aiMessage: Message = {
        id: (Date.now() + 1).toString(),
        text: aiResponses[Math.floor(Math.random() * aiResponses.length)],
        sender: "ai",
        timestamp: new Date(),
      };
      setMessages((prev) => [...prev, aiMessage]);
      setIsTyping(false);
    }, 1500);
  };

  return (
    <div className="fixed inset-0 bg-background z-50 flex">
      <div className="w-[400px] border-r border-border flex flex-col bg-card">
        <div className="p-4 border-b border-border">
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 rounded-full bg-gradient-to-br from-primary to-secondary flex items-center justify-center">
              <Icon name="Sparkles" size={20} />
            </div>
            <div>
              <h3 className="font-heading font-semibold">–ü—Ä–æ–µ–∫—Ç —Å–∞–π—Ç–∞</h3>
              <p className="text-xs text-muted-foreground">–î–æ–±–∞–≤—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏</p>
            </div>
          </div>
        </div>

        <ScrollArea className="flex-1 p-4" ref={scrollRef}>
          <div className="space-y-4">
            {messages.map((message) => (
              <div
                key={message.id}
                className={`flex ${
                  message.sender === "user" ? "justify-end" : "justify-start"
                }`}
              >
                <div
                  className={`max-w-[85%] rounded-2xl px-4 py-3 ${
                    message.sender === "user"
                      ? "bg-primary text-primary-foreground"
                      : "bg-muted"
                  }`}
                >
                  <p className="text-sm whitespace-pre-line">{message.text}</p>
                  <span className="text-xs opacity-70 mt-1 block">
                    {message.timestamp.toLocaleTimeString("ru-RU", {
                      hour: "2-digit",
                      minute: "2-digit",
                    })}
                  </span>
                </div>
              </div>
            ))}
            {isTyping && (
              <div className="flex justify-start">
                <div className="bg-muted rounded-2xl px-4 py-3">
                  <div className="flex gap-1">
                    <span className="w-2 h-2 bg-foreground/40 rounded-full animate-bounce"></span>
                    <span className="w-2 h-2 bg-foreground/40 rounded-full animate-bounce" style={{ animationDelay: "0.1s" }}></span>
                    <span className="w-2 h-2 bg-foreground/40 rounded-full animate-bounce" style={{ animationDelay: "0.2s" }}></span>
                  </div>
                </div>
              </div>
            )}
          </div>
        </ScrollArea>

        <div className="p-4 border-t border-border">
          <div className="flex gap-2">
            <Input
              placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
              value={inputValue}
              onChange={(e) => setInputValue(e.target.value)}
              onKeyPress={(e) => {
                if (e.key === "Enter" && !e.shiftKey) {
                  e.preventDefault();
                  handleSend();
                }
              }}
              className="flex-1"
            />
            <Button onClick={handleSend} size="icon">
              <Icon name="Send" size={18} />
            </Button>
          </div>
        </div>
      </div>

      <div className="flex-1 flex flex-col">
        <div className="border-b border-border bg-card p-4 flex items-center justify-between">
          <div className="flex gap-2">
            <Button
              variant={activeTab === "site" ? "default" : "ghost"}
              size="sm"
              onClick={() => setActiveTab("site")}
            >
              <Icon name="Globe" size={16} className="mr-2" />
              –ì–æ—Ç–æ–≤—ã–π —Å–∞–π—Ç
            </Button>
            <Button
              variant={activeTab === "structure" ? "default" : "ghost"}
              size="sm"
              onClick={() => setActiveTab("structure")}
            >
              <Icon name="FolderTree" size={16} className="mr-2" />
              –°—Ç—Ä—É–∫—Ç—É—Ä–∞
            </Button>
          </div>

          <Button className="bg-primary hover:bg-primary/90">
            <Icon name="Upload" size={16} className="mr-2" />
            –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å
          </Button>
        </div>

        <div className="flex-1 overflow-auto p-6 bg-muted/5">
          {activeTab === "site" ? (
            <div className="max-w-6xl mx-auto space-y-6">
              <Card className="overflow-hidden border-border/50 card-glow">
                <div className="bg-muted/30 px-4 py-2 flex items-center gap-3 border-b border-border/50">
                  <div className="flex gap-1.5">
                    <div className="w-3 h-3 rounded-full bg-red-500/70"></div>
                    <div className="w-3 h-3 rounded-full bg-yellow-500/70"></div>
                    <div className="w-3 h-3 rounded-full bg-green-500/70"></div>
                  </div>
                  <div className="flex-1 bg-background/80 rounded px-3 py-1 text-sm text-muted-foreground flex items-center gap-2">
                    <Icon name="Lock" size={12} className="text-green-500" />
                    <span>coffee-shop.poehali.dev</span>
                  </div>
                </div>

                <CardContent className="p-0">
                  <div className="bg-gradient-to-br from-amber-950/40 via-background to-background p-12">
                    <div className="max-w-4xl mx-auto space-y-8">
                      <div className="text-center space-y-6">
                        <div className="inline-flex w-20 h-20 bg-amber-600/30 rounded-full items-center justify-center border-2 border-amber-600/50">
                          <Icon name="Coffee" size={40} className="text-amber-400" />
                        </div>
                        <h1 className="text-5xl font-heading font-bold text-gradient">
                          –£—é—Ç–Ω–∞—è –ö–æ—Ñ–µ–π–Ω—è
                        </h1>
                        <p className="text-xl text-muted-foreground">
                          –õ—É—á—à–∏–π –∫–æ—Ñ–µ –≤ –≥–æ—Ä–æ–¥–µ —Å 2010 –≥–æ–¥–∞
                        </p>
                        <div className="flex gap-4 justify-center">
                          <Button size="lg" className="bg-amber-600 hover:bg-amber-700">
                            <Icon name="MapPin" size={18} className="mr-2" />
                            –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫
                          </Button>
                          <Button size="lg" variant="outline">–ú–µ–Ω—é</Button>
                        </div>
                      </div>

                      <div className="grid grid-cols-3 gap-6">
                        {[
                          { icon: "Coffee", title: "–≠—Å–ø—Ä–µ—Å—Å–æ", price: "150 ‚ÇΩ" },
                          { icon: "Coffee", title: "–ö–∞–ø—É—á–∏–Ω–æ", price: "200 ‚ÇΩ" },
                          { icon: "Coffee", title: "Milk", price: "220 ‚ÇΩ" }
                        ].map((item, i) => (
                          <Card key={i} className="border-amber-600/20 bg-card/50 hover:bg-card transition-colors cursor-pointer">
                            <CardContent className="p-6 text-center">
                              <Icon name={item.icon} className="mx-auto mb-3 text-amber-500" size={40} />
                              <h3 className="font-semibold text-lg mb-2">{item.title}</h3>
                              <p className="text-2xl font-bold text-amber-600">{item.price}</p>
                            </CardContent>
                          </Card>
                        ))}
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <div className="grid grid-cols-3 gap-4">
                <Card className="border-border/50 bg-card/50">
                  <CardContent className="p-6 text-center">
                    <Icon name="Zap" className="text-primary mx-auto mb-3" size={32} />
                    <p className="text-3xl font-bold mb-1">30 —Å–µ–∫</p>
                    <p className="text-sm text-muted-foreground">–ü–æ–ª–Ω—ã–π —Å–∞–π—Ç –≥–æ—Ç–æ–≤</p>
                  </CardContent>
                </Card>
                <Card className="border-border/50 bg-card/50">
                  <CardContent className="p-6 text-center">
                    <Icon name="FileText" className="text-secondary mx-auto mb-3" size={32} />
                    <p className="text-3xl font-bold mb-1">8 —Å—Ç—Ä–∞–Ω–∏—Ü</p>
                    <p className="text-sm text-muted-foreground">–°–æ –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏</p>
                  </CardContent>
                </Card>
                <Card className="border-border/50 bg-card/50">
                  <CardContent className="p-6 text-center">
                    <Icon name="Smartphone" className="text-green-500 mx-auto mb-3" size={32} />
                    <p className="text-3xl font-bold mb-1">100%</p>
                    <p className="text-sm text-muted-foreground">–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π</p>
                  </CardContent>
                </Card>
              </div>
            </div>
          ) : (
            <div className="max-w-4xl mx-auto">
              <Card className="bg-[#1a1a1a] border-border/50">
                <CardContent className="p-8 font-mono text-sm">
                  <div className="space-y-3">
                    <div className="flex items-center gap-2 text-blue-400">
                      <Icon name="Folder" size={18} />
                      <span className="font-semibold">src/</span>
                    </div>
                    <div className="ml-6 space-y-2 text-green-400">
                      <div className="flex items-center gap-2">
                        <Icon name="FileCode" size={16} className="text-purple-400" />
                        <span>App.tsx</span>
                        <span className="text-muted-foreground text-xs ml-auto">–ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç</span>
                      </div>
                      <div className="flex items-center gap-2 text-blue-400">
                        <Icon name="Folder" size={16} />
                        <span>pages/</span>
                      </div>
                      <div className="ml-6 space-y-1.5">
                        {["Home.tsx", "Menu.tsx", "About.tsx", "Contact.tsx", "Booking.tsx"].map((file) => (
                          <div key={file} className="flex items-center gap-2 text-green-400">
                            <Icon name="FileCode" size={14} className="text-purple-400" />
                            <span>{file}</span>
                          </div>
                        ))}
                      </div>
                      <div className="flex items-center gap-2 text-blue-400">
                        <Icon name="Folder" size={16} />
                        <span>components/</span>
                      </div>
                      <div className="ml-6 space-y-1.5">
                        {["Header.tsx", "Footer.tsx", "ProductCard.tsx", "BookingForm.tsx"].map((file) => (
                          <div key={file} className="flex items-center gap-2 text-green-400">
                            <Icon name="FileCode" size={14} className="text-purple-400" />
                            <span>{file}</span>
                          </div>
                        ))}
                      </div>
                    </div>
                    <div className="mt-6 pt-4 border-t border-border/30">
                      <div className="flex gap-4 text-muted-foreground text-xs">
                        <Badge variant="outline" className="bg-green-500/10 text-green-400 border-green-500/30">
                          <Icon name="CheckCircle" size={12} className="mr-1" />
                          8 –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
                        </Badge>
                        <Badge variant="outline" className="bg-blue-500/10 text-blue-400 border-blue-500/30">
                          <Icon name="Layout" size={12} className="mr-1" />
                          5 —Å—Ç—Ä–∞–Ω–∏—Ü
                        </Badge>
                        <Badge variant="outline" className="bg-purple-500/10 text-purple-400 border-purple-500/30">
                          <Icon name="Smartphone" size={12} className="mr-1" />
                          –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π
                        </Badge>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};
